/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.npower.dm.action.favorite;

import java.io.Writer;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.npower.dm.action.BaseDispatchAction;
import com.npower.dm.action.Constants;
import com.npower.dm.core.Favorite;
import com.npower.dm.core.FavoriteDevice;
import com.npower.dm.hibernate.dao.FavoriteBeanImpl;
import com.npower.dm.hibernate.dao.FavoriteDeviceBeanImpl;
import com.npower.dm.management.FavoriteBean;
import com.npower.dm.management.FavoriteDeviceBean;
import com.npower.dm.management.ManagementBeanFactory;
import com.npower.dm.security.DMWebPrincipal;

/**
 * MyEclipse Struts Creation date: 12-31-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class Device4FavoriteAction extends BaseDispatchAction {

  private static Log log = LogFactory.getLog(Device4FavoriteAction.class);

  /**
   * @param mapping
   * @param form
   * @param request
   * @param response
   * @return ActionForward
   */
  public ActionForward getFavorites(ActionMapping mapping, ActionForm form, HttpServletRequest request,
      HttpServletResponse response) throws Exception {
    DMWebPrincipal user = (DMWebPrincipal) request.getSession().getAttribute(Constants.ADMIN_USER_KEY);
    Writer out = response.getWriter();
    String owner = user.getUsername();
    log.debug("Login User: " + owner);
    if (StringUtils.isEmpty(owner)) {
      out.write("error");
      return null;
    }
    ManagementBeanFactory factory = null;
    try {
      factory = this.getManagementBeanFactory(request);
      FavoriteBean favoriteBean = (FavoriteBean) factory.createBean(FavoriteBeanImpl.class);
      List<Favorite> favorites = favoriteBean.findByOwner(user.getUsername());
      StringBuffer result = new StringBuffer();
      if (!favorites.isEmpty()) {
        result.append("{'totalProperty':100, 'root':[");
        result.append("{'id':'" + favorites.get(0).getFavoriteId() + "', 'name':'" + favorites.get(0).getName() + "'}");
        for (int i = 1; i < favorites.size(); i++) {
          Iterator<Favorite> it = favorites.iterator();
          if (it.hasNext()) {
            result.append(",");
            result.append("{'id':'" + favorites.get(i).getFavoriteId() + "', 'name':'" + favorites.get(i).getName()
                + "'}");
          }
        }
        result.append("]}");
      }
      log.debug(result.toString());
      boolean scriptTag = false;
      String cb = request.getParameter("callback");
      if (cb != null) {
        scriptTag = true;
        response.setContentType("text/javascript");
      } else {
        response.setContentType("application/x-json");
      }
      if (scriptTag) {
        out.write(cb + "(");
      }
      out.write(result.toString());
      if (scriptTag) {
        out.write(");");
      }
    } catch (Exception e) {
      throw e;
    }
    return null;
  }

  public ActionForward saveDeviceToFavorite(ActionMapping mapping, ActionForm form, HttpServletRequest request,
      HttpServletResponse response) throws Exception {
    String deviceId = request.getParameter("deviceId");
    String favoriteName = request.getParameter("favoriteName");
    Writer out = response.getWriter();
    ManagementBeanFactory factory = null;
    DMWebPrincipal user = (DMWebPrincipal) request.getSession().getAttribute(Constants.ADMIN_USER_KEY);
    String owner = user.getUsername();
    if (StringUtils.isEmpty(owner)) {
      out.write("error");
      return null;
    }
    try {
      factory = this.getManagementBeanFactory(request);
      FavoriteDeviceBean favoriteDeviceBean = (FavoriteDeviceBean) factory.createBean(FavoriteDeviceBeanImpl.class);
      FavoriteBean favoriteBean = (FavoriteBean) factory.createBean(FavoriteBeanImpl.class);
      List<Favorite> favorites = favoriteBean.findByName(favoriteName);
      log.debug("Favorites List Size: " + favorites.size());
      if (favorites.isEmpty()) {
        Boolean share = true;
        Favorite newFavorite = favoriteBean.newInstance();
        newFavorite.setName(favoriteName);
        newFavorite.setOwner(owner);
        newFavorite.setShared(share);
        factory.beginTransaction();
        favoriteBean.save(newFavorite);
        factory.commit();

        List<Favorite> list = favoriteBean.findByExample(newFavorite);
        if (list.size() == 1) {
          String id = list.get(0).getFavoriteId().toString();
          favoriteDeviceBean.addDeviceFavorite(deviceId, id, owner);
          out.write("success");
        } else {
          log.debug("The existence of the same favorites!!!");
        }
      } else {
        List<FavoriteDevice> deviceList = favoriteDeviceBean.findByDeviceId(Long.parseLong(deviceId));
        if (!deviceList.isEmpty()) {
          for (FavoriteDevice fDevice : deviceList) {
            if (favorites.size() == 1) {
              if (fDevice.getFavorite() == favorites.get(0)) {
                out.write("failure");
              } else {
                String id = favorites.get(0).getFavoriteId().toString();
                favoriteDeviceBean.addDeviceFavorite(deviceId, id, owner);
                out.write("success");
              }
            } else {
              log.debug("The existence of the same favorites!!!");
            }
          }
        } else {
          if (favorites.size() == 1) {
            String id = favorites.get(0).getFavoriteId().toString();
            favoriteDeviceBean.addDeviceFavorite(deviceId, id, owner);
            out.write("success");
          }
        }
      }
    } catch (Exception e) {
      throw e;
    }
    log.debug("Add Favorite: deviceId = " + deviceId + ", Favorite Name = " + favoriteName);
    return null;
  }
}