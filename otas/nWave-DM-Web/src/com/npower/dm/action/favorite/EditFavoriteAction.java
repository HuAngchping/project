/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.npower.dm.action.favorite;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.validator.DynaValidatorForm;

import com.npower.dm.action.BaseDispatchAction;
import com.npower.dm.action.Constants;
import com.npower.dm.core.Favorite;
import com.npower.dm.hibernate.dao.FavoriteBeanImpl;
import com.npower.dm.management.FavoriteBean;
import com.npower.dm.management.ManagementBeanFactory;
import com.npower.dm.security.DMWebPrincipal;

/**
 * MyEclipse Struts Creation date: 12-19-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class EditFavoriteAction extends BaseDispatchAction {
  /*
   * Generated Methods
   */

  /**
   * Method execute
   * 
   * @param mapping
   * @param form
   * @param request
   * @param response
   * @return ActionForward
   */
  public ActionForward edit(ActionMapping mapping, ActionForm form, HttpServletRequest request,
      HttpServletResponse response) throws Exception {
    DynaValidatorForm favoriteForm = (DynaValidatorForm) form;
    String favoriteId = favoriteForm.getString("favoriteId");
    if (StringUtils.isEmpty(favoriteId)) {
      return mapping.findForward("edit");
    } else {
      try {
        ManagementBeanFactory factory = this.getManagementBeanFactory(request);
        FavoriteBean favoriteBean = (FavoriteBean)factory.createBean(FavoriteBeanImpl.class);
        Favorite favorite = favoriteBean.findById(Long.parseLong(favoriteId));
        favoriteForm.set("name", favorite.getName());
        favoriteForm.set("description", favorite.getDescription());
        favoriteForm.set("shared", favorite.isShared());
        request.setAttribute("favorite", favorite);
      } catch (Exception e) {
        throw e;
      }
      return mapping.findForward("edit");
    }
  }
  
  public ActionForward save(ActionMapping mapping, ActionForm form, HttpServletRequest request,
      HttpServletResponse response) throws Exception {
    DynaValidatorForm favoriteForm = (DynaValidatorForm) form;
    ManagementBeanFactory factory = null;
    try {
      factory = this.getManagementBeanFactory(request);
      FavoriteBean favoriteBean = (FavoriteBean)factory.createBean(FavoriteBeanImpl.class);
      String favoriteId = favoriteForm.getString("favoriteId");
      String name = favoriteForm.getString("name");
      String description = favoriteForm.getString("description");
      Boolean shared = (Boolean) favoriteForm.get("shared");
      if (shared == null) {
        shared = false;
      }
      DMWebPrincipal user = (DMWebPrincipal) request.getSession().getAttribute(Constants.ADMIN_USER_KEY);
      String owner = user.getUsername();
      for (Favorite fav : favoriteBean.findByOwner(owner)) {
        if (fav.getName().equals(name)) {
          ActionMessages errors = new ActionMessages();
          errors.add("name", new ActionMessage("page.error.device.favorite.name.label"));
          saveErrors(request, errors);
          return mapping.getInputForward();
        }
      }
      if (StringUtils.isNotEmpty(favoriteId)) {
        Favorite favorite = favoriteBean.findById(Long.parseLong(favoriteId));
        factory.beginTransaction();
        favorite.setName(name);
        favorite.setDescription(description);
        favorite.setShared(shared);
        favorite.setOwner(owner);
        favoriteBean.save(favorite);
        factory.commit();
      } else {
        Favorite favorite = favoriteBean.newInstance();
        factory.beginTransaction();
        favorite.setName(name);
        favorite.setDescription(description);
        favorite.setShared(shared);
        favorite.setOwner(owner);
        favoriteBean.save(favorite);
        factory.commit();
      }
    } catch (Exception e) {
      throw e;
    }
    return mapping.findForward("save");
  }

}