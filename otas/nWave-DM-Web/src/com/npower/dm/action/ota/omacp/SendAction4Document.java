/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.npower.dm.action.ota.omacp;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.validator.DynaValidatorForm;

import com.npower.dm.action.ActionHelper;
import com.npower.dm.core.Carrier;
import com.npower.dm.management.CarrierBean;
import com.npower.dm.util.NumberGenerator;
import com.npower.dm.util.NumberGeneratorFactory;
import com.npower.sms.client.SmsSender;
import com.npower.wap.omacp.OMACPSecurityMethod;
import com.npower.wap.omacp.OMAClientProvDoc;
import com.npower.wap.omacp.OMAClientProvSettings;


/** 
 * MyEclipse Struts
 * Creation date: 11-17-2006
 * 
 * XDoclet definition:
 * @struts.action path="/notification/send" name="NotificationForm" input="/notification/input" scope="request" validate="true"
 * @struts.action-forward name="success" path="aaaaa" contextRelative="true"
 */
public class SendAction4Document extends BaseSendAction {
  
  
  /** 
   * Method execute
   * @param mapping
   * @param form
   * @param request
   * @param response
   * @return ActionForward
   */
  public ActionForward send(ActionMapping mapping, ActionForm rawForm, HttpServletRequest request,
      HttpServletResponse response) throws Exception {
    DynaValidatorForm form = (DynaValidatorForm)rawForm;
    
    String numberTemplate = form.getString("msisdn");
    NumberGeneratorFactory numberGeneratorFactory = NumberGeneratorFactory.newInstance();
    NumberGenerator numberGenerator = numberGeneratorFactory.getNumberGenerator(numberTemplate);
    List<String> numbers = numberGenerator.generate();
    try {
        String document = form.getString("document");
        OMAClientProvDoc doc = new OMAClientProvDoc(document);
        
        // Append OTA Pin
        if (StringUtils.isNotEmpty(form.getString("OTAPINTYPE")) 
            && StringUtils.isNotEmpty(form.getString("OTAPIN"))) {
           
           String tmp = form.getString("OTAPINTYPE");
           OMACPSecurityMethod type = null;
           if (tmp.equals("USERPIN")) {
              type = OMACPSecurityMethod.USERPIN;
           } else if (tmp.equals("NETWPIN")) {
             type = OMACPSecurityMethod.NETWPIN;
           }
           
           doc.setSecurityMethod(type);
           doc.setPIN(form.getString("OTAPIN"));
        }

        // Get SMS Sender
        String carrierID = form.getString("carrierID");
        Carrier carrier = null;
        if (StringUtils.isNotEmpty(carrierID)) {
           CarrierBean carrierBean = this.getManagementBeanFactory(request).createCarrierBean();
           carrier = carrierBean.getCarrierByID(carrierID);
        }
        SmsSender sender = ActionHelper.getSmsSender(carrier);

        // Send SMS
        for (String msisdn: numbers) {
            sender.send(doc.getSmsWapPushMessage(), msisdn, msisdn);
        }

        return mapping.findForward("success");
    } catch (Exception e) {
      throw e;
    } finally {
    }
  }

  /* (non-Javadoc)
   * @see com.npower.dm.action.ota.omacp.BaseSendAction#getSettings(org.apache.struts.validator.DynaValidatorForm)
   */
  @Override
  protected OMAClientProvSettings getSettings(DynaValidatorForm form) {
    return null;
  }
  
}