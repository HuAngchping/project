/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.npower.dm.action.ota.nokia;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.validator.DynaValidatorForm;

import com.npower.dm.action.ActionHelper;
import com.npower.dm.action.BaseAction;
import com.npower.dm.core.Carrier;
import com.npower.dm.management.CarrierBean;
import com.npower.dm.util.NumberGenerator;
import com.npower.dm.util.NumberGeneratorFactory;
import com.npower.sms.client.SmsSender;
import com.npower.wap.nokia.NokiaOtaBookmarkSettings;


/** 
 * MyEclipse Struts
 * Creation date: 11-17-2006
 * 
 * XDoclet definition:
 * @struts.action path="/notification/send" name="NotificationForm" input="/notification/input" scope="request" validate="true"
 * @struts.action-forward name="success" path="aaaaa" contextRelative="true"
 */
public class SendBookmarkAction extends BaseAction {
  
  /** 
   * Method execute
   * @param mapping
   * @param form
   * @param request
   * @param response
   * @return ActionForward
   */
  public ActionForward execute(ActionMapping mapping, ActionForm rawForm, HttpServletRequest request,
      HttpServletResponse response) throws Exception {
    
    DynaValidatorForm form = (DynaValidatorForm)rawForm;
    String numberTemplate = form.getString("msisdn");
    NumberGeneratorFactory numberGeneratorFactory = NumberGeneratorFactory.newInstance();
    NumberGenerator numberGenerator = numberGeneratorFactory.getNumberGenerator(numberTemplate);
    List<String> numbers = numberGenerator.generate();
    try {
        String text = form.getString("Text");
        String url = form.getString("WAPBookmark");
        NokiaOtaBookmarkSettings setting = new NokiaOtaBookmarkSettings();
        setting.addBookmark(text, url);
        
        // Get SMS Sender
        String carrierID = form.getString("carrierID");
        Carrier carrier = null;
        if (StringUtils.isNotEmpty(carrierID)) {
           CarrierBean carrierBean = this.getManagementBeanFactory(request).createCarrierBean();
           carrier = carrierBean.getCarrierByID(carrierID);
        }
        SmsSender sender = ActionHelper.getSmsSender(carrier);
        for (String msisdn: numbers) {
            sender.send(setting.getSmsWapPushMessage(), msisdn, msisdn);
        }
        
        return mapping.findForward("success");
    } catch (Exception e) {
      throw e;
    } finally {
    }
  }
  
}