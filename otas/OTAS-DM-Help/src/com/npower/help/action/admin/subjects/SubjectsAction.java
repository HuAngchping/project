/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.npower.help.action.admin.subjects;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.DynaActionForm;

import com.npower.help.action.ActionHelper;
import com.npower.help.action.HelpDAOPersistentManager;
import com.npower.help.core.Subject;
import com.npower.help.dao.HelpDAOFactory;
import com.npower.help.dao.SubjectDAO;

/**
 * MyEclipse Struts Creation date: 06-16-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 * @struts.action-forward name="success"
 *                        path="/jsp/help/admin/subjects/subjets.jsp"
 */
public class SubjectsAction extends Action {

  /**
   * Method execute
   * 
   * @param mapping
   * @param form
   * @param request
   * @param response
   * @return ActionForward
   */
  public ActionForward execute(ActionMapping mapping, ActionForm rawForm, HttpServletRequest request,
      HttpServletResponse response) throws Exception {
    HelpDAOFactory factory = null;
    DynaActionForm form = (DynaActionForm) rawForm;
    try {
      factory = HelpDAOPersistentManager.getManagementBeanFactory(request);
      SubjectDAO subjectDAO = factory.getSubjectDAO();

      // Load Subjects Tree
      ActionHelper.loadSubjectsTree(this.getServlet().getServletContext(), request, factory);

      Subject currentSubject = getCurrentSubject(subjectDAO, form);

      // 查询Subjects
      List<Subject> result = findSubjects(subjectDAO, currentSubject, form);

      // 构造Location
      List<Subject> subjects4Location = new ArrayList<Subject>();
      Subject s = currentSubject;
      while (s != null) {
        subjects4Location.add(0, s);
        s = s.getParent();
      }
      // 查询Subject
      Subject subject = findSubject(subjectDAO, form);

      request.setAttribute("subjects4Location", subjects4Location);

      request.setAttribute("currentSubject", currentSubject);

      request.setAttribute("subjects", result);

      request.setAttribute("subject", subject);
      return mapping.findForward("list");
    } catch (Exception e) {
      throw e;
    } finally {
    }
  }

  /**
   * @param subjectDAO
   * @param currentSubject
   * @param form
   * @return
   */
  private List<Subject> findSubjects(SubjectDAO subjectDAO, Subject currentSubject, DynaActionForm form) {
    String searchText = form.getString("searchText");
    return subjectDAO.find4SimpleMode(currentSubject, searchText, true);
  }

  /**
   * @param subjectDAO
   * @param form
   * @return
   */
  private Subject getCurrentSubject(SubjectDAO subjectDAO, DynaActionForm form) {
    // 获取当前的Subject
    String subjectID = form.getString("subjectId");
    Subject currentSubject = null;
    if (StringUtils.isNotEmpty(subjectID)) {
      currentSubject = subjectDAO.findById(Long.parseLong(subjectID));
    }
    return currentSubject;
  }

  private Subject findSubject(SubjectDAO subjectDAO, DynaActionForm form) {
    String subjectId = form.getString("subjectId");
    Subject subject = null;
    if (StringUtils.isNotEmpty(subjectId)) {
      subject = subjectDAO.findById(Long.parseLong(subjectId));
    }
    return subject;
  }
}